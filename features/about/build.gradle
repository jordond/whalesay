apply from: "${rootDir}/buildsystem/feature.gradle"

android {
    defaultConfig {
        buildConfigField "long", "BUILD_DATE", System.currentTimeMillis() + "L"
        buildConfigField "String", "GIT_HASH", "\"${getGitHash()}\""
        buildConfigField "String", "GIT_BRANCH", "\"${getWorkingBranch()}\""
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":modules:core")
    implementation project(":modules:coreview")
    implementation project(":modules:ktx")

    /* Kotlin */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"

    /* Architecture components */
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycle"
    implementation "android.arch.navigation:navigation-fragment-ktx:$archNavigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$archNavigation"

    /* Android libraries */
    implementation "com.android.support:customtabs:$androidCustomTabs"
    implementation "androidx.constraintlayout:constraintlayout:$androidConstraintLayout"
    implementation "androidx.legacy:legacy-support-v4:$androidLegacy"
    implementation "androidx.appcompat:appcompat:$androidAppcompat"
    implementation "com.google.android.material:material:$androidMaterial"

    /* Ktx */
    implementation "androidx.core:core-ktx:$ktxCore"
    implementation "com.shopify:livedata-ktx:$ktxLiveData"
    implementation "com.snakydesign.livedataextensions:lives:$ktxLives"
    implementation "com.github.ajalt:timberkt:$ktxTimber"

    /* Dependency Injection */
    implementation "com.google.dagger:dagger:$diDagger"
    implementation "com.google.dagger:dagger-android:$diDagger"
    implementation "com.google.dagger:dagger-android-support:$diDagger"
    kapt "com.google.dagger:dagger-compiler:$diDagger"
    kapt "com.google.dagger:dagger-android-processor:$diDagger"

    /* UI */
    implementation "com.github.etiennelenhart:eiffel:$uiEiffel"

    /* Misc */
    implementation "joda-time:joda-time:$miscJodaTime"
    implementation "com.github.quickpermissions:quickpermissions-kotlin:$miscQuickPermissions"

    /* Debug Utils */
    implementation "com.jakewharton.timber:timber:$debugTimber"

    /* Testing */
    testImplementation "junit:junit:$testJunit"
    testImplementation "androidx.arch.core:core-testing:$testAndroidArch"
    testImplementation "io.mockk:mockk:$testMockk"
    testImplementation "com.willowtreeapps.assertk:assertk:$testAssertK"
    testImplementation "org.robolectric:robolectric:$testRobolectric"
    androidTestImplementation "androidx.test:runner:$testAndroidRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$testEspresso"
}

static def getGitHash() {
    return "git rev-parse --short HEAD".execute().text.trim()
}

static def getWorkingBranch() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}